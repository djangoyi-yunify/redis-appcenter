{
  "cluster_description": "Redis standalone",
  "cluster": "Cluster",
  "name_label": "名称",
  "name_description": "RedisShack服务的名称",
  "description_label": "描述",
  "description_description": "给服务添加一段备注",
  "vxnet_label": "私有网络",
  "on":"开启",
  "off":"关闭",
  "Name": "集群名称",
  "username": "用户名",
  "passwd":"密码",
  "switch":"开启/停用",
  "rules": "规则",
  "For example:": "<pre>示例:\n    ~cached:* ~objects:* ~items:* ~public:* &* -@all +get\n    ~key1:* ~key2:* -@all +@read\n    ~* &* +@all </pre>",
  "Enable the user: it is possible to authenticate as this user.": "开启后, 该用户可以验证登录",
  "ACL User Name": "不支持default，只能由字母、数字或下划线组成，且长度为 2~26 个字符。如果要添加的账号已存在，该操作会失败。",
  "vxnet_description": "请选择私有网络",
  "MultithreadedProd": "多线程生产环境",
  "SingleThreadedProd": "单线程生产环境",
  "MultithreadedTest": "多线程测试环境",
  "SingleThreadedTest": "单线程测试环境",
  "node_label": "节点",
  "node_description": "Redis节点",
  "cpu_label": "CPU",
  "cpu_description": "每个节点的核数，一般作为缓存，单核就足够了，在数据量较大，数据写入速度很快的情况下，可以视情况使用双核",
  "memory_label": "内存",
  "memory_description": "每个节点的内存大小(单位 MB)",
  "instance_class_label": "主机类型",
  "instance_class_description": "节点主机的类型",
  "env_description": "服务参数。启动后，修改这些参数会导致服务重启",
  "tcp-keepalive_label": "tcp-keepalive",
  "tcp-keepalive_description": "TCP keepalive",
  "timeout_label": "timeout",
  "Times": "次",
  "enable or not for web console": "是否开启 WebConsole，true：开启；false：关闭，不会重启 redis",
  "Admin Username": "文件查看用户名",
  "Admin Password": "文件查看密码",
  "roles": "节点实时角色",
  "ip": "节点 IP",
  "role": "节点角色",
  "allow_deletion": "允许删除",
  "params": "参数",
  "timeout": "超时时间",
  "replicaDelay": "主从复制落后字节数",
  "Bytes": "字节",
  "sync-qps" : "同步QPS",
  "parallel_description": "启动多少个并发线程同步一个RDB文件。",
  "source.type_description": "源集群 Redis 的类型",
  "source.address_description": "源redis地址。<br>standalone写vip地址 例: 172.22.4.253:6379<br>cluster写所有节点ip, 例:\"172.22.4.2:6379;172.22...;172.22.4.7:6379\"",
  "source.password_raw_description": "源端密码，留空表示无密码",
  "target.type_description": "目标集群 Redis 的类型",
  "target.address_description": "目标redis地址。<br>standalone写vip地址 例: 172.22.4.253:6379<br>cluster写所有节点ip, 例:\"172.22.4.2:6379;172.22...;172.22.4.7:6379\"",
  "target.password_raw_description": "目标端密码，留空表示无密码",
  "fake_time_description": "用于处理过期的键值，当迁移两端不一致的时候，目的端需要加上这个值",
  "key_exists_description": "当源目的有重复 key 时是否进行覆写.",
  "filter.db.whitelist_description": "指定的db被通过，比如0;5;10将会使db0, db5, db10通过, 其他的被过滤",
  "filter.db.blacklist_description": "指定的db被过滤，比如0;5;10将会使db0, db5, db10过滤，其他的被通过",
  "filter.key.whitelist_description": "支持按前缀过滤key，只让指定前缀的key通过，分号分隔。比如指定abc，将会通过abc, abc1, abcxxx",
  "filter.key.blacklist_description": "支持按前缀过滤key，不让指定前缀的key通过，分号分隔。比如指定abc，将会阻塞abc, abc1, abcxxx",
  "filter.slot_description": "指定过滤slot，只让指定的slot通过",
  "filter.lua_description": "控制不让lua脚本通过，true表示不通过",
  "big_key_threshold_description": "如果目的端大版本小于源端, 也建议设置为1.",
  "keep_alive_description": "TCP keep-alive保活参数，单位秒，0表示不启用。",
  "qps_description": "同步QPS上限",
  "resume_from_break_point_description": "断点续传开关",
  "log.level_description": "日志等级"
}
